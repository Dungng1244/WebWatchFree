#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebXemPhim.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WebsitePhim")]
	public partial class dbWebsitePhimDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertTKNguoiDung(TKNguoiDung instance);
    partial void UpdateTKNguoiDung(TKNguoiDung instance);
    partial void DeleteTKNguoiDung(TKNguoiDung instance);
    partial void InsertBaoCao(BaoCao instance);
    partial void UpdateBaoCao(BaoCao instance);
    partial void DeleteBaoCao(BaoCao instance);
    partial void InsertBinhLuan(BinhLuan instance);
    partial void UpdateBinhLuan(BinhLuan instance);
    partial void DeleteBinhLuan(BinhLuan instance);
    partial void InsertDienVien(DienVien instance);
    partial void UpdateDienVien(DienVien instance);
    partial void DeleteDienVien(DienVien instance);
    partial void InsertKhoYeuThich(KhoYeuThich instance);
    partial void UpdateKhoYeuThich(KhoYeuThich instance);
    partial void DeleteKhoYeuThich(KhoYeuThich instance);
    partial void InsertKieuPhim(KieuPhim instance);
    partial void UpdateKieuPhim(KieuPhim instance);
    partial void DeleteKieuPhim(KieuPhim instance);
    partial void InsertLienHe(LienHe instance);
    partial void UpdateLienHe(LienHe instance);
    partial void DeleteLienHe(LienHe instance);
    partial void InsertNguoiDung(NguoiDung instance);
    partial void UpdateNguoiDung(NguoiDung instance);
    partial void DeleteNguoiDung(NguoiDung instance);
    partial void InsertNhaSanXuat(NhaSanXuat instance);
    partial void UpdateNhaSanXuat(NhaSanXuat instance);
    partial void DeleteNhaSanXuat(NhaSanXuat instance);
    partial void InsertPhim(Phim instance);
    partial void UpdatePhim(Phim instance);
    partial void DeletePhim(Phim instance);
    partial void InsertQuangCao(QuangCao instance);
    partial void UpdateQuangCao(QuangCao instance);
    partial void DeleteQuangCao(QuangCao instance);
    partial void InsertQuocGia(QuocGia instance);
    partial void UpdateQuocGia(QuocGia instance);
    partial void DeleteQuocGia(QuocGia instance);
    partial void InsertTheLoai(TheLoai instance);
    partial void UpdateTheLoai(TheLoai instance);
    partial void DeleteTheLoai(TheLoai instance);
    partial void InsertTKAdmin(TKAdmin instance);
    partial void UpdateTKAdmin(TKAdmin instance);
    partial void DeleteTKAdmin(TKAdmin instance);
    #endregion
		
		public dbWebsitePhimDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["WebsitePhimConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbWebsitePhimDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbWebsitePhimDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbWebsitePhimDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbWebsitePhimDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<TKNguoiDung> TKNguoiDungs
		{
			get
			{
				return this.GetTable<TKNguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<BaoCao> BaoCaos
		{
			get
			{
				return this.GetTable<BaoCao>();
			}
		}
		
		public System.Data.Linq.Table<BinhLuan> BinhLuans
		{
			get
			{
				return this.GetTable<BinhLuan>();
			}
		}
		
		public System.Data.Linq.Table<CTPhim> CTPhims
		{
			get
			{
				return this.GetTable<CTPhim>();
			}
		}
		
		public System.Data.Linq.Table<DienVien> DienViens
		{
			get
			{
				return this.GetTable<DienVien>();
			}
		}
		
		public System.Data.Linq.Table<KhoYeuThich> KhoYeuThiches
		{
			get
			{
				return this.GetTable<KhoYeuThich>();
			}
		}
		
		public System.Data.Linq.Table<KieuPhim> KieuPhims
		{
			get
			{
				return this.GetTable<KieuPhim>();
			}
		}
		
		public System.Data.Linq.Table<LienHe> LienHes
		{
			get
			{
				return this.GetTable<LienHe>();
			}
		}
		
		public System.Data.Linq.Table<NguoiDung> NguoiDungs
		{
			get
			{
				return this.GetTable<NguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<NhaSanXuat> NhaSanXuats
		{
			get
			{
				return this.GetTable<NhaSanXuat>();
			}
		}
		
		public System.Data.Linq.Table<Phim> Phims
		{
			get
			{
				return this.GetTable<Phim>();
			}
		}
		
		public System.Data.Linq.Table<QuangCao> QuangCaos
		{
			get
			{
				return this.GetTable<QuangCao>();
			}
		}
		
		public System.Data.Linq.Table<QuocGia> QuocGias
		{
			get
			{
				return this.GetTable<QuocGia>();
			}
		}
		
		public System.Data.Linq.Table<TheLoai> TheLoais
		{
			get
			{
				return this.GetTable<TheLoai>();
			}
		}
		
		public System.Data.Linq.Table<TKAdmin> TKAdmins
		{
			get
			{
				return this.GetTable<TKAdmin>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaAdmin;
		
		private int _MaTKadmin;
		
		private string _Ten;
		
		private string _Email;
		
		private string _SDT;
		
		private string _DiaChi;
		
		private EntityRef<TKAdmin> _TKAdmin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaAdminChanging(int value);
    partial void OnMaAdminChanged();
    partial void OnMaTKadminChanging(int value);
    partial void OnMaTKadminChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    #endregion
		
		public Admin()
		{
			this._TKAdmin = default(EntityRef<TKAdmin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaAdmin", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaAdmin
		{
			get
			{
				return this._MaAdmin;
			}
			set
			{
				if ((this._MaAdmin != value))
				{
					this.OnMaAdminChanging(value);
					this.SendPropertyChanging();
					this._MaAdmin = value;
					this.SendPropertyChanged("MaAdmin");
					this.OnMaAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTKadmin", DbType="Int NOT NULL")]
		public int MaTKadmin
		{
			get
			{
				return this._MaTKadmin;
			}
			set
			{
				if ((this._MaTKadmin != value))
				{
					if (this._TKAdmin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTKadminChanging(value);
					this.SendPropertyChanging();
					this._MaTKadmin = value;
					this.SendPropertyChanged("MaTKadmin");
					this.OnMaTKadminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TKAdmin_Admin", Storage="_TKAdmin", ThisKey="MaTKadmin", OtherKey="MaTKadmin", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TKAdmin TKAdmin
		{
			get
			{
				return this._TKAdmin.Entity;
			}
			set
			{
				TKAdmin previousValue = this._TKAdmin.Entity;
				if (((previousValue != value) 
							|| (this._TKAdmin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TKAdmin.Entity = null;
						previousValue.Admins.Remove(this);
					}
					this._TKAdmin.Entity = value;
					if ((value != null))
					{
						value.Admins.Add(this);
						this._MaTKadmin = value.MaTKadmin;
					}
					else
					{
						this._MaTKadmin = default(int);
					}
					this.SendPropertyChanged("TKAdmin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TKNguoiDung")]
	public partial class TKNguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTK;
		
		private string _TenDN;
		
		private string _MatKhau;
		
		private EntitySet<KhoYeuThich> _KhoYeuThiches;
		
		private EntitySet<NguoiDung> _NguoiDungs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTKChanging(int value);
    partial void OnMaTKChanged();
    partial void OnTenDNChanging(string value);
    partial void OnTenDNChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    #endregion
		
		public TKNguoiDung()
		{
			this._KhoYeuThiches = new EntitySet<KhoYeuThich>(new Action<KhoYeuThich>(this.attach_KhoYeuThiches), new Action<KhoYeuThich>(this.detach_KhoYeuThiches));
			this._NguoiDungs = new EntitySet<NguoiDung>(new Action<NguoiDung>(this.attach_NguoiDungs), new Action<NguoiDung>(this.detach_NguoiDungs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaTK
		{
			get
			{
				return this._MaTK;
			}
			set
			{
				if ((this._MaTK != value))
				{
					this.OnMaTKChanging(value);
					this.SendPropertyChanging();
					this._MaTK = value;
					this.SendPropertyChanged("MaTK");
					this.OnMaTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenDN
		{
			get
			{
				return this._TenDN;
			}
			set
			{
				if ((this._TenDN != value))
				{
					this.OnTenDNChanging(value);
					this.SendPropertyChanging();
					this._TenDN = value;
					this.SendPropertyChanged("TenDN");
					this.OnTenDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TKNguoiDung_KhoYeuThich", Storage="_KhoYeuThiches", ThisKey="MaTK", OtherKey="MaTK")]
		public EntitySet<KhoYeuThich> KhoYeuThiches
		{
			get
			{
				return this._KhoYeuThiches;
			}
			set
			{
				this._KhoYeuThiches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TKNguoiDung_NguoiDung", Storage="_NguoiDungs", ThisKey="MaTK", OtherKey="MaTK")]
		public EntitySet<NguoiDung> NguoiDungs
		{
			get
			{
				return this._NguoiDungs;
			}
			set
			{
				this._NguoiDungs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KhoYeuThiches(KhoYeuThich entity)
		{
			this.SendPropertyChanging();
			entity.TKNguoiDung = this;
		}
		
		private void detach_KhoYeuThiches(KhoYeuThich entity)
		{
			this.SendPropertyChanging();
			entity.TKNguoiDung = null;
		}
		
		private void attach_NguoiDungs(NguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.TKNguoiDung = this;
		}
		
		private void detach_NguoiDungs(NguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.TKNguoiDung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BaoCao")]
	public partial class BaoCao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaBC;
		
		private int _MaKhach;
		
		private string _NoiDung;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBCChanging(int value);
    partial void OnMaBCChanged();
    partial void OnMaKhachChanging(int value);
    partial void OnMaKhachChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    #endregion
		
		public BaoCao()
		{
			this._NguoiDung = default(EntityRef<NguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBC", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaBC
		{
			get
			{
				return this._MaBC;
			}
			set
			{
				if ((this._MaBC != value))
				{
					this.OnMaBCChanging(value);
					this.SendPropertyChanging();
					this._MaBC = value;
					this.SendPropertyChanged("MaBC");
					this.OnMaBCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhach", DbType="Int NOT NULL")]
		public int MaKhach
		{
			get
			{
				return this._MaKhach;
			}
			set
			{
				if ((this._MaKhach != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhachChanging(value);
					this.SendPropertyChanging();
					this._MaKhach = value;
					this.SendPropertyChanged("MaKhach");
					this.OnMaKhachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_BaoCao", Storage="_NguoiDung", ThisKey="MaKhach", OtherKey="MaKhach", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.BaoCaos.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.BaoCaos.Add(this);
						this._MaKhach = value.MaKhach;
					}
					else
					{
						this._MaKhach = default(int);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BinhLuan")]
	public partial class BinhLuan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaBL;
		
		private int _MaPhim;
		
		private int _MaKhach;
		
		private string _NoiDung;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBLChanging(int value);
    partial void OnMaBLChanged();
    partial void OnMaPhimChanging(int value);
    partial void OnMaPhimChanged();
    partial void OnMaKhachChanging(int value);
    partial void OnMaKhachChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    #endregion
		
		public BinhLuan()
		{
			this._NguoiDung = default(EntityRef<NguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBL", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaBL
		{
			get
			{
				return this._MaBL;
			}
			set
			{
				if ((this._MaBL != value))
				{
					this.OnMaBLChanging(value);
					this.SendPropertyChanging();
					this._MaBL = value;
					this.SendPropertyChanged("MaBL");
					this.OnMaBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhim", DbType="Int NOT NULL")]
		public int MaPhim
		{
			get
			{
				return this._MaPhim;
			}
			set
			{
				if ((this._MaPhim != value))
				{
					this.OnMaPhimChanging(value);
					this.SendPropertyChanging();
					this._MaPhim = value;
					this.SendPropertyChanged("MaPhim");
					this.OnMaPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhach", DbType="Int NOT NULL")]
		public int MaKhach
		{
			get
			{
				return this._MaKhach;
			}
			set
			{
				if ((this._MaKhach != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhachChanging(value);
					this.SendPropertyChanging();
					this._MaKhach = value;
					this.SendPropertyChanged("MaKhach");
					this.OnMaKhachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_BinhLuan", Storage="_NguoiDung", ThisKey="MaKhach", OtherKey="MaKhach", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.BinhLuans.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.BinhLuans.Add(this);
						this._MaKhach = value.MaKhach;
					}
					else
					{
						this._MaKhach = default(int);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTPhim")]
	public partial class CTPhim
	{
		
		private int _MaPhim;
		
		private int _MaDV;
		
		public CTPhim()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhim", DbType="Int NOT NULL")]
		public int MaPhim
		{
			get
			{
				return this._MaPhim;
			}
			set
			{
				if ((this._MaPhim != value))
				{
					this._MaPhim = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDV", DbType="Int NOT NULL")]
		public int MaDV
		{
			get
			{
				return this._MaDV;
			}
			set
			{
				if ((this._MaDV != value))
				{
					this._MaDV = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DienVien")]
	public partial class DienVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDV;
		
		private string _TenDV;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDVChanging(int value);
    partial void OnMaDVChanged();
    partial void OnTenDVChanging(string value);
    partial void OnTenDVChanged();
    #endregion
		
		public DienVien()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDV
		{
			get
			{
				return this._MaDV;
			}
			set
			{
				if ((this._MaDV != value))
				{
					this.OnMaDVChanging(value);
					this.SendPropertyChanging();
					this._MaDV = value;
					this.SendPropertyChanged("MaDV");
					this.OnMaDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDV", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenDV
		{
			get
			{
				return this._TenDV;
			}
			set
			{
				if ((this._TenDV != value))
				{
					this.OnTenDVChanging(value);
					this.SendPropertyChanging();
					this._TenDV = value;
					this.SendPropertyChanged("TenDV");
					this.OnTenDVChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhoYeuThich")]
	public partial class KhoYeuThich : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhimYT;
		
		private int _MaPhim;
		
		private int _MaTK;
		
		private EntityRef<TKNguoiDung> _TKNguoiDung;
		
		private EntityRef<Phim> _Phim;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhimYTChanging(int value);
    partial void OnMaPhimYTChanged();
    partial void OnMaPhimChanging(int value);
    partial void OnMaPhimChanged();
    partial void OnMaTKChanging(int value);
    partial void OnMaTKChanged();
    #endregion
		
		public KhoYeuThich()
		{
			this._TKNguoiDung = default(EntityRef<TKNguoiDung>);
			this._Phim = default(EntityRef<Phim>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhimYT", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPhimYT
		{
			get
			{
				return this._MaPhimYT;
			}
			set
			{
				if ((this._MaPhimYT != value))
				{
					this.OnMaPhimYTChanging(value);
					this.SendPropertyChanging();
					this._MaPhimYT = value;
					this.SendPropertyChanged("MaPhimYT");
					this.OnMaPhimYTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhim", DbType="Int NOT NULL")]
		public int MaPhim
		{
			get
			{
				return this._MaPhim;
			}
			set
			{
				if ((this._MaPhim != value))
				{
					if (this._Phim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhimChanging(value);
					this.SendPropertyChanging();
					this._MaPhim = value;
					this.SendPropertyChanged("MaPhim");
					this.OnMaPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTK", DbType="Int NOT NULL")]
		public int MaTK
		{
			get
			{
				return this._MaTK;
			}
			set
			{
				if ((this._MaTK != value))
				{
					if (this._TKNguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTKChanging(value);
					this.SendPropertyChanging();
					this._MaTK = value;
					this.SendPropertyChanged("MaTK");
					this.OnMaTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TKNguoiDung_KhoYeuThich", Storage="_TKNguoiDung", ThisKey="MaTK", OtherKey="MaTK", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TKNguoiDung TKNguoiDung
		{
			get
			{
				return this._TKNguoiDung.Entity;
			}
			set
			{
				TKNguoiDung previousValue = this._TKNguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._TKNguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TKNguoiDung.Entity = null;
						previousValue.KhoYeuThiches.Remove(this);
					}
					this._TKNguoiDung.Entity = value;
					if ((value != null))
					{
						value.KhoYeuThiches.Add(this);
						this._MaTK = value.MaTK;
					}
					else
					{
						this._MaTK = default(int);
					}
					this.SendPropertyChanged("TKNguoiDung");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phim_KhoYeuThich", Storage="_Phim", ThisKey="MaPhim", OtherKey="Maphim", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Phim Phim
		{
			get
			{
				return this._Phim.Entity;
			}
			set
			{
				Phim previousValue = this._Phim.Entity;
				if (((previousValue != value) 
							|| (this._Phim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phim.Entity = null;
						previousValue.KhoYeuThiches.Remove(this);
					}
					this._Phim.Entity = value;
					if ((value != null))
					{
						value.KhoYeuThiches.Add(this);
						this._MaPhim = value.Maphim;
					}
					else
					{
						this._MaPhim = default(int);
					}
					this.SendPropertyChanged("Phim");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KieuPhim")]
	public partial class KieuPhim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKieu;
		
		private string _TenKieu;
		
		private EntitySet<Phim> _Phims;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKieuChanging(int value);
    partial void OnMaKieuChanged();
    partial void OnTenKieuChanging(string value);
    partial void OnTenKieuChanged();
    #endregion
		
		public KieuPhim()
		{
			this._Phims = new EntitySet<Phim>(new Action<Phim>(this.attach_Phims), new Action<Phim>(this.detach_Phims));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKieu", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaKieu
		{
			get
			{
				return this._MaKieu;
			}
			set
			{
				if ((this._MaKieu != value))
				{
					this.OnMaKieuChanging(value);
					this.SendPropertyChanging();
					this._MaKieu = value;
					this.SendPropertyChanged("MaKieu");
					this.OnMaKieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKieu", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenKieu
		{
			get
			{
				return this._TenKieu;
			}
			set
			{
				if ((this._TenKieu != value))
				{
					this.OnTenKieuChanging(value);
					this.SendPropertyChanging();
					this._TenKieu = value;
					this.SendPropertyChanged("TenKieu");
					this.OnTenKieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KieuPhim_Phim", Storage="_Phims", ThisKey="MaKieu", OtherKey="MaKieu")]
		public EntitySet<Phim> Phims
		{
			get
			{
				return this._Phims;
			}
			set
			{
				this._Phims.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phims(Phim entity)
		{
			this.SendPropertyChanging();
			entity.KieuPhim = this;
		}
		
		private void detach_Phims(Phim entity)
		{
			this.SendPropertyChanging();
			entity.KieuPhim = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LienHe")]
	public partial class LienHe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLH;
		
		private string _TenLH;
		
		private string _Email;
		
		private int _SDT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLHChanging(int value);
    partial void OnMaLHChanged();
    partial void OnTenLHChanging(string value);
    partial void OnTenLHChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSDTChanging(int value);
    partial void OnSDTChanged();
    #endregion
		
		public LienHe()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaLH
		{
			get
			{
				return this._MaLH;
			}
			set
			{
				if ((this._MaLH != value))
				{
					this.OnMaLHChanging(value);
					this.SendPropertyChanging();
					this._MaLH = value;
					this.SendPropertyChanged("MaLH");
					this.OnMaLHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLH", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TenLH
		{
			get
			{
				return this._TenLH;
			}
			set
			{
				if ((this._TenLH != value))
				{
					this.OnTenLHChanging(value);
					this.SendPropertyChanging();
					this._TenLH = value;
					this.SendPropertyChanged("TenLH");
					this.OnTenLHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Int NOT NULL")]
		public int SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguoiDung")]
	public partial class NguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKhach;
		
		private int _MaTK;
		
		private string _TenKhach;
		
		private string _Email;
		
		private string _SDT;
		
		private EntitySet<BaoCao> _BaoCaos;
		
		private EntitySet<BinhLuan> _BinhLuans;
		
		private EntityRef<TKNguoiDung> _TKNguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhachChanging(int value);
    partial void OnMaKhachChanged();
    partial void OnMaTKChanging(int value);
    partial void OnMaTKChanged();
    partial void OnTenKhachChanging(string value);
    partial void OnTenKhachChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public NguoiDung()
		{
			this._BaoCaos = new EntitySet<BaoCao>(new Action<BaoCao>(this.attach_BaoCaos), new Action<BaoCao>(this.detach_BaoCaos));
			this._BinhLuans = new EntitySet<BinhLuan>(new Action<BinhLuan>(this.attach_BinhLuans), new Action<BinhLuan>(this.detach_BinhLuans));
			this._TKNguoiDung = default(EntityRef<TKNguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhach", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaKhach
		{
			get
			{
				return this._MaKhach;
			}
			set
			{
				if ((this._MaKhach != value))
				{
					this.OnMaKhachChanging(value);
					this.SendPropertyChanging();
					this._MaKhach = value;
					this.SendPropertyChanged("MaKhach");
					this.OnMaKhachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTK", DbType="Int NOT NULL")]
		public int MaTK
		{
			get
			{
				return this._MaTK;
			}
			set
			{
				if ((this._MaTK != value))
				{
					if (this._TKNguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTKChanging(value);
					this.SendPropertyChanging();
					this._MaTK = value;
					this.SendPropertyChanged("MaTK");
					this.OnMaTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhach", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenKhach
		{
			get
			{
				return this._TenKhach;
			}
			set
			{
				if ((this._TenKhach != value))
				{
					this.OnTenKhachChanging(value);
					this.SendPropertyChanging();
					this._TenKhach = value;
					this.SendPropertyChanged("TenKhach");
					this.OnTenKhachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_BaoCao", Storage="_BaoCaos", ThisKey="MaKhach", OtherKey="MaKhach")]
		public EntitySet<BaoCao> BaoCaos
		{
			get
			{
				return this._BaoCaos;
			}
			set
			{
				this._BaoCaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_BinhLuan", Storage="_BinhLuans", ThisKey="MaKhach", OtherKey="MaKhach")]
		public EntitySet<BinhLuan> BinhLuans
		{
			get
			{
				return this._BinhLuans;
			}
			set
			{
				this._BinhLuans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TKNguoiDung_NguoiDung", Storage="_TKNguoiDung", ThisKey="MaTK", OtherKey="MaTK", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TKNguoiDung TKNguoiDung
		{
			get
			{
				return this._TKNguoiDung.Entity;
			}
			set
			{
				TKNguoiDung previousValue = this._TKNguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._TKNguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TKNguoiDung.Entity = null;
						previousValue.NguoiDungs.Remove(this);
					}
					this._TKNguoiDung.Entity = value;
					if ((value != null))
					{
						value.NguoiDungs.Add(this);
						this._MaTK = value.MaTK;
					}
					else
					{
						this._MaTK = default(int);
					}
					this.SendPropertyChanged("TKNguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaoCaos(BaoCao entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_BaoCaos(BaoCao entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
		
		private void attach_BinhLuans(BinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_BinhLuans(BinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaSanXuat")]
	public partial class NhaSanXuat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNSX;
		
		private string _TenNSX;
		
		private EntitySet<Phim> _Phims;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNSXChanging(int value);
    partial void OnMaNSXChanged();
    partial void OnTenNSXChanging(string value);
    partial void OnTenNSXChanged();
    #endregion
		
		public NhaSanXuat()
		{
			this._Phims = new EntitySet<Phim>(new Action<Phim>(this.attach_Phims), new Action<Phim>(this.detach_Phims));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNSX", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaNSX
		{
			get
			{
				return this._MaNSX;
			}
			set
			{
				if ((this._MaNSX != value))
				{
					this.OnMaNSXChanging(value);
					this.SendPropertyChanging();
					this._MaNSX = value;
					this.SendPropertyChanged("MaNSX");
					this.OnMaNSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNSX", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenNSX
		{
			get
			{
				return this._TenNSX;
			}
			set
			{
				if ((this._TenNSX != value))
				{
					this.OnTenNSXChanging(value);
					this.SendPropertyChanging();
					this._TenNSX = value;
					this.SendPropertyChanged("TenNSX");
					this.OnTenNSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaSanXuat_Phim", Storage="_Phims", ThisKey="MaNSX", OtherKey="MaNSX")]
		public EntitySet<Phim> Phims
		{
			get
			{
				return this._Phims;
			}
			set
			{
				this._Phims.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phims(Phim entity)
		{
			this.SendPropertyChanging();
			entity.NhaSanXuat = this;
		}
		
		private void detach_Phims(Phim entity)
		{
			this.SendPropertyChanging();
			entity.NhaSanXuat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phim")]
	public partial class Phim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Maphim;
		
		private int _MaQG;
		
		private int _MaKieu;
		
		private int _MaNSX;
		
		private int _MaTL;
		
		private string _TenPhim;
		
		private int _NamSX;
		
		private int _SoTap;
		
		private System.DateTime _Ngaycapnhat;
		
		private string _Anhbia;
		
		private string _Mota;
		
		private EntitySet<KhoYeuThich> _KhoYeuThiches;
		
		private EntityRef<KieuPhim> _KieuPhim;
		
		private EntityRef<NhaSanXuat> _NhaSanXuat;
		
		private EntityRef<QuocGia> _QuocGia;
		
		private EntityRef<TheLoai> _TheLoai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaphimChanging(int value);
    partial void OnMaphimChanged();
    partial void OnMaQGChanging(int value);
    partial void OnMaQGChanged();
    partial void OnMaKieuChanging(int value);
    partial void OnMaKieuChanged();
    partial void OnMaNSXChanging(int value);
    partial void OnMaNSXChanged();
    partial void OnMaTLChanging(int value);
    partial void OnMaTLChanged();
    partial void OnTenPhimChanging(string value);
    partial void OnTenPhimChanged();
    partial void OnNamSXChanging(int value);
    partial void OnNamSXChanged();
    partial void OnSoTapChanging(int value);
    partial void OnSoTapChanged();
    partial void OnNgaycapnhatChanging(System.DateTime value);
    partial void OnNgaycapnhatChanged();
    partial void OnAnhbiaChanging(string value);
    partial void OnAnhbiaChanged();
    partial void OnMotaChanging(string value);
    partial void OnMotaChanged();
    #endregion
		
		public Phim()
		{
			this._KhoYeuThiches = new EntitySet<KhoYeuThich>(new Action<KhoYeuThich>(this.attach_KhoYeuThiches), new Action<KhoYeuThich>(this.detach_KhoYeuThiches));
			this._KieuPhim = default(EntityRef<KieuPhim>);
			this._NhaSanXuat = default(EntityRef<NhaSanXuat>);
			this._QuocGia = default(EntityRef<QuocGia>);
			this._TheLoai = default(EntityRef<TheLoai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maphim", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Maphim
		{
			get
			{
				return this._Maphim;
			}
			set
			{
				if ((this._Maphim != value))
				{
					this.OnMaphimChanging(value);
					this.SendPropertyChanging();
					this._Maphim = value;
					this.SendPropertyChanged("Maphim");
					this.OnMaphimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQG", DbType="Int NOT NULL")]
		public int MaQG
		{
			get
			{
				return this._MaQG;
			}
			set
			{
				if ((this._MaQG != value))
				{
					if (this._QuocGia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaQGChanging(value);
					this.SendPropertyChanging();
					this._MaQG = value;
					this.SendPropertyChanged("MaQG");
					this.OnMaQGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKieu", DbType="Int NOT NULL")]
		public int MaKieu
		{
			get
			{
				return this._MaKieu;
			}
			set
			{
				if ((this._MaKieu != value))
				{
					if (this._KieuPhim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKieuChanging(value);
					this.SendPropertyChanging();
					this._MaKieu = value;
					this.SendPropertyChanged("MaKieu");
					this.OnMaKieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNSX", DbType="Int NOT NULL")]
		public int MaNSX
		{
			get
			{
				return this._MaNSX;
			}
			set
			{
				if ((this._MaNSX != value))
				{
					if (this._NhaSanXuat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNSXChanging(value);
					this.SendPropertyChanging();
					this._MaNSX = value;
					this.SendPropertyChanged("MaNSX");
					this.OnMaNSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTL", DbType="Int NOT NULL")]
		public int MaTL
		{
			get
			{
				return this._MaTL;
			}
			set
			{
				if ((this._MaTL != value))
				{
					if (this._TheLoai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTLChanging(value);
					this.SendPropertyChanging();
					this._MaTL = value;
					this.SendPropertyChanged("MaTL");
					this.OnMaTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhim", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenPhim
		{
			get
			{
				return this._TenPhim;
			}
			set
			{
				if ((this._TenPhim != value))
				{
					this.OnTenPhimChanging(value);
					this.SendPropertyChanging();
					this._TenPhim = value;
					this.SendPropertyChanged("TenPhim");
					this.OnTenPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamSX", DbType="Int NOT NULL")]
		public int NamSX
		{
			get
			{
				return this._NamSX;
			}
			set
			{
				if ((this._NamSX != value))
				{
					this.OnNamSXChanging(value);
					this.SendPropertyChanging();
					this._NamSX = value;
					this.SendPropertyChanged("NamSX");
					this.OnNamSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTap", DbType="Int NOT NULL")]
		public int SoTap
		{
			get
			{
				return this._SoTap;
			}
			set
			{
				if ((this._SoTap != value))
				{
					this.OnSoTapChanging(value);
					this.SendPropertyChanging();
					this._SoTap = value;
					this.SendPropertyChanged("SoTap");
					this.OnSoTapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaycapnhat", DbType="Date NOT NULL")]
		public System.DateTime Ngaycapnhat
		{
			get
			{
				return this._Ngaycapnhat;
			}
			set
			{
				if ((this._Ngaycapnhat != value))
				{
					this.OnNgaycapnhatChanging(value);
					this.SendPropertyChanging();
					this._Ngaycapnhat = value;
					this.SendPropertyChanged("Ngaycapnhat");
					this.OnNgaycapnhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anhbia", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Anhbia
		{
			get
			{
				return this._Anhbia;
			}
			set
			{
				if ((this._Anhbia != value))
				{
					this.OnAnhbiaChanging(value);
					this.SendPropertyChanging();
					this._Anhbia = value;
					this.SendPropertyChanged("Anhbia");
					this.OnAnhbiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mota", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Mota
		{
			get
			{
				return this._Mota;
			}
			set
			{
				if ((this._Mota != value))
				{
					this.OnMotaChanging(value);
					this.SendPropertyChanging();
					this._Mota = value;
					this.SendPropertyChanged("Mota");
					this.OnMotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phim_KhoYeuThich", Storage="_KhoYeuThiches", ThisKey="Maphim", OtherKey="MaPhim")]
		public EntitySet<KhoYeuThich> KhoYeuThiches
		{
			get
			{
				return this._KhoYeuThiches;
			}
			set
			{
				this._KhoYeuThiches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KieuPhim_Phim", Storage="_KieuPhim", ThisKey="MaKieu", OtherKey="MaKieu", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public KieuPhim KieuPhim
		{
			get
			{
				return this._KieuPhim.Entity;
			}
			set
			{
				KieuPhim previousValue = this._KieuPhim.Entity;
				if (((previousValue != value) 
							|| (this._KieuPhim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KieuPhim.Entity = null;
						previousValue.Phims.Remove(this);
					}
					this._KieuPhim.Entity = value;
					if ((value != null))
					{
						value.Phims.Add(this);
						this._MaKieu = value.MaKieu;
					}
					else
					{
						this._MaKieu = default(int);
					}
					this.SendPropertyChanged("KieuPhim");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaSanXuat_Phim", Storage="_NhaSanXuat", ThisKey="MaNSX", OtherKey="MaNSX", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NhaSanXuat NhaSanXuat
		{
			get
			{
				return this._NhaSanXuat.Entity;
			}
			set
			{
				NhaSanXuat previousValue = this._NhaSanXuat.Entity;
				if (((previousValue != value) 
							|| (this._NhaSanXuat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaSanXuat.Entity = null;
						previousValue.Phims.Remove(this);
					}
					this._NhaSanXuat.Entity = value;
					if ((value != null))
					{
						value.Phims.Add(this);
						this._MaNSX = value.MaNSX;
					}
					else
					{
						this._MaNSX = default(int);
					}
					this.SendPropertyChanged("NhaSanXuat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuocGia_Phim", Storage="_QuocGia", ThisKey="MaQG", OtherKey="MaQG", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public QuocGia QuocGia
		{
			get
			{
				return this._QuocGia.Entity;
			}
			set
			{
				QuocGia previousValue = this._QuocGia.Entity;
				if (((previousValue != value) 
							|| (this._QuocGia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuocGia.Entity = null;
						previousValue.Phims.Remove(this);
					}
					this._QuocGia.Entity = value;
					if ((value != null))
					{
						value.Phims.Add(this);
						this._MaQG = value.MaQG;
					}
					else
					{
						this._MaQG = default(int);
					}
					this.SendPropertyChanged("QuocGia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_Phim", Storage="_TheLoai", ThisKey="MaTL", OtherKey="MaTL", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TheLoai TheLoai
		{
			get
			{
				return this._TheLoai.Entity;
			}
			set
			{
				TheLoai previousValue = this._TheLoai.Entity;
				if (((previousValue != value) 
							|| (this._TheLoai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TheLoai.Entity = null;
						previousValue.Phims.Remove(this);
					}
					this._TheLoai.Entity = value;
					if ((value != null))
					{
						value.Phims.Add(this);
						this._MaTL = value.MaTL;
					}
					else
					{
						this._MaTL = default(int);
					}
					this.SendPropertyChanged("TheLoai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KhoYeuThiches(KhoYeuThich entity)
		{
			this.SendPropertyChanging();
			entity.Phim = this;
		}
		
		private void detach_KhoYeuThiches(KhoYeuThich entity)
		{
			this.SendPropertyChanging();
			entity.Phim = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuangCao")]
	public partial class QuangCao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaQC;
		
		private string _TenQC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaQCChanging(int value);
    partial void OnMaQCChanged();
    partial void OnTenQCChanging(string value);
    partial void OnTenQCChanged();
    #endregion
		
		public QuangCao()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQC", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaQC
		{
			get
			{
				return this._MaQC;
			}
			set
			{
				if ((this._MaQC != value))
				{
					this.OnMaQCChanging(value);
					this.SendPropertyChanging();
					this._MaQC = value;
					this.SendPropertyChanged("MaQC");
					this.OnMaQCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenQC", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenQC
		{
			get
			{
				return this._TenQC;
			}
			set
			{
				if ((this._TenQC != value))
				{
					this.OnTenQCChanging(value);
					this.SendPropertyChanging();
					this._TenQC = value;
					this.SendPropertyChanged("TenQC");
					this.OnTenQCChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuocGia")]
	public partial class QuocGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaQG;
		
		private string _TenQG;
		
		private EntitySet<Phim> _Phims;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaQGChanging(int value);
    partial void OnMaQGChanged();
    partial void OnTenQGChanging(string value);
    partial void OnTenQGChanged();
    #endregion
		
		public QuocGia()
		{
			this._Phims = new EntitySet<Phim>(new Action<Phim>(this.attach_Phims), new Action<Phim>(this.detach_Phims));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQG", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaQG
		{
			get
			{
				return this._MaQG;
			}
			set
			{
				if ((this._MaQG != value))
				{
					this.OnMaQGChanging(value);
					this.SendPropertyChanging();
					this._MaQG = value;
					this.SendPropertyChanged("MaQG");
					this.OnMaQGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenQG", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TenQG
		{
			get
			{
				return this._TenQG;
			}
			set
			{
				if ((this._TenQG != value))
				{
					this.OnTenQGChanging(value);
					this.SendPropertyChanging();
					this._TenQG = value;
					this.SendPropertyChanged("TenQG");
					this.OnTenQGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuocGia_Phim", Storage="_Phims", ThisKey="MaQG", OtherKey="MaQG")]
		public EntitySet<Phim> Phims
		{
			get
			{
				return this._Phims;
			}
			set
			{
				this._Phims.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phims(Phim entity)
		{
			this.SendPropertyChanging();
			entity.QuocGia = this;
		}
		
		private void detach_Phims(Phim entity)
		{
			this.SendPropertyChanging();
			entity.QuocGia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TheLoai")]
	public partial class TheLoai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTL;
		
		private string _TenTL;
		
		private EntitySet<Phim> _Phims;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTLChanging(int value);
    partial void OnMaTLChanged();
    partial void OnTenTLChanging(string value);
    partial void OnTenTLChanged();
    #endregion
		
		public TheLoai()
		{
			this._Phims = new EntitySet<Phim>(new Action<Phim>(this.attach_Phims), new Action<Phim>(this.detach_Phims));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTL", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaTL
		{
			get
			{
				return this._MaTL;
			}
			set
			{
				if ((this._MaTL != value))
				{
					this.OnMaTLChanging(value);
					this.SendPropertyChanging();
					this._MaTL = value;
					this.SendPropertyChanged("MaTL");
					this.OnMaTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTL", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TenTL
		{
			get
			{
				return this._TenTL;
			}
			set
			{
				if ((this._TenTL != value))
				{
					this.OnTenTLChanging(value);
					this.SendPropertyChanging();
					this._TenTL = value;
					this.SendPropertyChanged("TenTL");
					this.OnTenTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_Phim", Storage="_Phims", ThisKey="MaTL", OtherKey="MaTL")]
		public EntitySet<Phim> Phims
		{
			get
			{
				return this._Phims;
			}
			set
			{
				this._Phims.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phims(Phim entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = this;
		}
		
		private void detach_Phims(Phim entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TKAdmin")]
	public partial class TKAdmin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTKadmin;
		
		private string _TenTK;
		
		private string _MatKhauTK;
		
		private EntitySet<Admin> _Admins;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTKadminChanging(int value);
    partial void OnMaTKadminChanged();
    partial void OnTenTKChanging(string value);
    partial void OnTenTKChanged();
    partial void OnMatKhauTKChanging(string value);
    partial void OnMatKhauTKChanged();
    #endregion
		
		public TKAdmin()
		{
			this._Admins = new EntitySet<Admin>(new Action<Admin>(this.attach_Admins), new Action<Admin>(this.detach_Admins));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTKadmin", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaTKadmin
		{
			get
			{
				return this._MaTKadmin;
			}
			set
			{
				if ((this._MaTKadmin != value))
				{
					this.OnMaTKadminChanging(value);
					this.SendPropertyChanging();
					this._MaTKadmin = value;
					this.SendPropertyChanged("MaTKadmin");
					this.OnMaTKadminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTK", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TenTK
		{
			get
			{
				return this._TenTK;
			}
			set
			{
				if ((this._TenTK != value))
				{
					this.OnTenTKChanging(value);
					this.SendPropertyChanging();
					this._TenTK = value;
					this.SendPropertyChanged("TenTK");
					this.OnTenTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhauTK", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string MatKhauTK
		{
			get
			{
				return this._MatKhauTK;
			}
			set
			{
				if ((this._MatKhauTK != value))
				{
					this.OnMatKhauTKChanging(value);
					this.SendPropertyChanging();
					this._MatKhauTK = value;
					this.SendPropertyChanged("MatKhauTK");
					this.OnMatKhauTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TKAdmin_Admin", Storage="_Admins", ThisKey="MaTKadmin", OtherKey="MaTKadmin")]
		public EntitySet<Admin> Admins
		{
			get
			{
				return this._Admins;
			}
			set
			{
				this._Admins.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Admins(Admin entity)
		{
			this.SendPropertyChanging();
			entity.TKAdmin = this;
		}
		
		private void detach_Admins(Admin entity)
		{
			this.SendPropertyChanging();
			entity.TKAdmin = null;
		}
	}
}
#pragma warning restore 1591
